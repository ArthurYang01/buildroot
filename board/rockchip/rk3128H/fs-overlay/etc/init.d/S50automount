#!/bin/sh
#
# Insmod
#

auto_mount() {
	local cmdline="`cat /proc/cmdline`"
	local data_type="${cmdline##*dataType=}"
	local data_type="${data_type%% *}"
	local cfg_type="${cmdline##*cfgType=}"
	local cfg_type="${cfg_type%% *}"

	case "${cfg_type}" in
		ext4)
			;;
		*)
			local cfg_type="ext4"
			;;
	esac

	case "${data_type}" in
		squashfs|ext4)
			;;
		*)
			local data_type="ext4"
			;;
	esac

	local flash_type="${cmdline##*root=}"
	local flash_type="${flash_type%% *}"

	if [ "${flash_type}" == "/dev/rknand_rootfs" ];then
		local fdir="dev/block/by-name/"
		if [ "${data_type}" == "ext4" ];then
			e2fsck -fy ${fdir}userdata
			resize2fs ${fdir}userdata
		fi
		if [ "${cfg_type}" == "ext4" ];then
			e2fsck -fy ${fdir}oem
			resize2fs ${fdir}oem
		fi

		mount -t ${data_type} ${fdir}userdata /userdata
		mount -t ${cfg_type} ${fdir}oem /oem
		return 0
	fi

	if [ "${flash_type:0:11}" == "/dev/mmcblk" ];then
        printf "insmod drmboot service...\n"
        #insmod /usr/lib/modules/drmboot.ko
		local ftmp="${cmdline##*mtdparts=rk29xxnand:}"
		local ftmp="${ftmp%% *}"
		local fno=0
		local fdir=/dev/PartNo
		mkdir $fdir
		for i in ${ftmp//,/ }
		do
			i=${i##*\(}
			i=${i%*\)}
			local fno=$(( fno + 1 ))
			ln -sf "/dev/mmcblk0p${fno}" ${fdir}/${i}
		done

		if [ "${data_type}" == "ext4" ];then
			e2fsck -fy /dev/mmcblk2p9
			resize2fs /dev/mmcblk2p9
		fi
		if [ "${cfg_type}" == "ext4" ];then
			e2fsck -fy /dev/mmcblk2p10
			resize2fs /dev/mmcblk2p10
		fi

		mount -t ${data_type} /dev/mmcblk2p10 /userdata
		mount -t ${cfg_type} /dev/mmcblk2p9 /oem
		return 0
	fi

	if [ "${flash_type:0:9}" == "/dev/boot" ];then
		if [ "${data_type}" == "ext4" ];then
			e2fsck -fy /dev/data
			resize2fs /dev/data
		fi
		if [ "${cfg_type}" == "ext4" ];then
			e2fsck -fy /dev/cfg
			resize2fs /dev/cfg
		fi

		mount -t ${data_type} /dev/data /data
		mount -t ${cfg_type} /dev/cfg /data/cfg
		return 0
	fi

}

case "$1" in
  start)
        auto_mount
        printf "insmod vcodec service...\n"
        insmod /usr/lib/modules/vcodec_service.ko
        ;;
  stop)
        printf "stop finished\n"
        ;;
  *)
        echo "Usage: $0 {start|stop}"
        exit 1
        ;;
esac
exit 0
